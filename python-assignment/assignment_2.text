Answers

1. Two values of Boolean data type:

    True and False

2. Three types of Boolean operators:

    AND, OR, NOT

3. Truth tables for Boolean operators:

    AND:
        True and True = True
        True and False = False
        False and True = False
        False and False = False
    OR:
        True or True = True
        True or False = True
        False or True = True
        False or False = False
    NOT:
        not True = False
        not False = True

4. Values of expressions:

    (5 > 4) and (3 == 5) → False
    not (5 > 4) → False
    (5 > 4) or (3 == 5) → True
    not ((5 > 4) or (3 == 5)) → False
    (True and True) and (True == False) → False
    (not False) or (not True) → True

5. Six comparison operators:

    == (equal to)
    != (not equal to)
    > (greater than)
    < (less than)
    >= (greater than or equal to)
    <= (less than or equal to)

6. Difference between equal to (==) and assignment (=):

    Equal to (==): Used to compare two values.
    Assignment (=): Used to assign a value to a variable.

Example:

    spam = 10 assigns 10 to spam.
    spam == 10 checks if spam is equal to 10.

7. Three blocks in the code:

    First block: if spam == 10:
    Second block: if spam > 5:
    Third block: else:

8. Code to print based on the value of spam:
	spam = int(input("Enter spam value: "))
	if spam == 1:
	    print("Hello")
	elif spam == 2:
	    print("Howdy")
	else:
	    print("Greetings!")


9. Keys to stop an endless loop:

    Press Ctrl + C.

10. Difference between break and continue:

    break: Exits the loop completely.
    continue: Skips the current iteration and moves to the next one.

11. Difference in range() functions:

    range(10) – Starts from 0 and goes up to 9.
    range(0, 10) – Explicitly defines start at 0 and ends at 9.
    range(0, 10, 1) – Specifies start, end, and step size of 1.

12. Code to print numbers 1 to 10:

    For loop:
    for i in range(1, 11):
    print(i)
    while loop:
	i = 1
	while i <= 10:
	    print(i)
	    i += 1
	    
	    
13. How to call bacon() from spam module:    
	import spam
	spam.bacon()


